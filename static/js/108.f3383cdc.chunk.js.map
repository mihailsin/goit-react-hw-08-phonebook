{"version":3,"file":"static/js/108.f3383cdc.chunk.js","mappings":"wPAEMA,EAAOC,EAAAA,GAAAA,KAAH,sBACJC,EAAUD,EAAAA,GAAAA,IAAH,mGAKPE,EAAQF,EAAAA,GAAAA,MAAH,sBACGA,EAAAA,GAAAA,MAAH,gDAGIA,EAAAA,GAAAA,OAAH,0F,mFCFZ,EAPoB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACrB,OAAO,SAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,QAAS,OAAQC,YAAa,GAAzC,SAA+CJ,M,8FCwBxD,EAvBqB,SAAC,GAAuB,IAArBK,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5B,OACE,UAACC,EAAA,EAAD,CACEC,UAAU,EACVC,QAAQ,YACRP,GAAI,CACFQ,GAAI,EACJC,YAAa,SACbC,UAAW,SACXC,QAASC,EAAAA,EAAAA,MAEXC,KAAK,SATP,UAWGV,EAXH,IAWUC,O,sKCmFd,EAvFiB,WACf,IAAMU,GAAWC,EAAAA,EAAAA,MAEjB,GAAkCC,EAAAA,EAAAA,MAAlC,eAAOC,EAAP,KAAuBC,EAAvB,KAAuBA,MACvB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACJR,GACFS,MACE,sFAEH,CAACT,IAEJ,IAAMU,EAAe,SAAAC,GACnB,OAAQA,EAAEC,OAAOC,MACf,IAAK,OACHV,EAAYQ,EAAEC,OAAOE,OACrB,MACF,IAAK,QACHT,EAAaM,EAAEC,OAAOE,OACtB,MACF,IAAK,WACHP,EAAgBI,EAAEC,OAAOE,OACzB,MACF,QACE,SAaN,OACE,SAACC,EAAA,EAAD,WACE,SAAC,KAAD,CAAMC,SAXY,SAAAL,GACpBA,EAAEM,iBACFlB,EAAa,CAAEc,KAAMX,EAAUgB,MAAOd,EAAWe,SAAUb,IACxDc,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPzB,GAAS0B,EAAAA,EAAAA,IAAQD,OAElBE,OAAM,SAAAvB,GAAK,OAAIwB,QAAQC,IAAIzB,EAAM0B,aAKlC,UACE,UAAC,KAAD,YACE,2CACA,SAAC,KAAD,CAAOC,QAAQ,cACf,SAACC,EAAA,EAAD,CACE9C,GAAI,CAAEQ,GAAI,EAAGuC,GAAI,GACjBxC,QAAQ,WACRyC,MAAM,OACNC,SAAUrB,EACVf,KAAK,OACLqC,GAAG,WACHnB,KAAK,OACLoB,UAAQ,KAGV,SAAC,KAAD,CAAON,QAAQ,eACf,SAACC,EAAA,EAAD,CACE9C,GAAI,CAAE+C,GAAI,GACVlC,KAAK,QACLN,QAAQ,WACR2C,GAAG,YACHF,MAAM,QACNC,SAAUrB,EACVG,KAAK,QACLoB,UAAQ,KAGV,SAAC,KAAD,CAAON,QAAQ,kBACf,SAACC,EAAA,EAAD,CACE9C,GAAI,CAAE+C,GAAI,GACVxC,QAAQ,WACRyC,MAAM,WACNC,SAAUrB,EACVf,KAAK,WACLqC,GAAG,eACHnB,KAAK,WACLoB,UAAQ,KAEV,SAACC,EAAA,EAAD,CAAcjD,KAAM","sources":["components/ContactForm/ContactForm.styled.jsx","components/FormWrapper/FormWrapper.jsx","components/SubmitButton/SubmitButton.jsx","views/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form``;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: flex-start;\n`;\nconst Label = styled.label``;\nconst Input = styled.input`\n  margin-bottom: 10px;\n`;\nconst Button = styled.button`\n  align-self: center;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nexport { Form, Label, Input, Button, Wrapper };\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport PropTypes from 'prop-types';\nconst FormWrapper = ({ children }) => {\n  return <Box sx={{ display: 'flex', paddingLeft: 7 }}>{children}</Box>;\n};\n\nFormWrapper.propTypes = {\n  children: PropTypes.node,\n};\nexport default FormWrapper;\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport { grey } from '@mui/material/colors';\nimport PropTypes from 'prop-types';\n\nconst SubmitButton = ({ text, spinner }) => {\n  return (\n    <Button\n      disabled={false}\n      variant=\"contained\"\n      sx={{\n        mt: 2,\n        justifySelf: 'center',\n        alignSelf: 'center',\n        bgcolor: grey[800],\n      }}\n      type=\"submit\"\n    >\n      {text} {spinner}\n    </Button>\n  );\n};\n\nSubmitButton.propTypes = {\n  text: PropTypes.string,\n  spinner: PropTypes.node,\n};\n\nexport default SubmitButton;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useRegisterUserMutation } from 'redux/userApi';\nimport { setUser } from 'redux/authSlice';\nimport { useDispatch } from 'react-redux';\nimport FormWrapper from 'components/FormWrapper';\nimport TextField from '@mui/material/TextField';\nimport SubmitButton from 'components/SubmitButton';\nimport {\n  Form,\n  Label,\n  Wrapper,\n} from '../../components/ContactForm/ContactForm.styled';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  const [registerUser, { error }] = useRegisterUserMutation();\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  useEffect(() => {\n    if (error)\n      alert(\n        'User with credentials you have entered is already exists, try another Name/Email'\n      );\n  }, [error]);\n\n  const inputHandler = e => {\n    switch (e.target.name) {\n      case 'name':\n        setUserName(e.target.value);\n        break;\n      case 'email':\n        setUserEmail(e.target.value);\n        break;\n      case 'password':\n        setUserPassword(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    registerUser({ name: userName, email: userEmail, password: userPassword })\n      .then(({ data }) => {\n        dispatch(setUser(data));\n      })\n      .catch(error => console.log(error.message));\n  };\n\n  return (\n    <FormWrapper>\n      <Form onSubmit={submitHandler}>\n        <Wrapper>\n          <h2>Register form</h2>\n          <Label htmlFor=\"userName\"></Label>\n          <TextField\n            sx={{ mt: 2, mb: 2 }}\n            variant=\"outlined\"\n            label=\"Name\"\n            onChange={inputHandler}\n            type=\"text\"\n            id=\"userName\"\n            name=\"name\"\n            required\n          />\n\n          <Label htmlFor=\"userEmail\"></Label>\n          <TextField\n            sx={{ mb: 2 }}\n            type=\"email\"\n            variant=\"outlined\"\n            id=\"userEmail\"\n            label=\"Email\"\n            onChange={inputHandler}\n            name=\"email\"\n            required\n          />\n\n          <Label htmlFor=\"userPassword\"></Label>\n          <TextField\n            sx={{ mb: 2 }}\n            variant=\"outlined\"\n            label=\"Password\"\n            onChange={inputHandler}\n            type=\"password\"\n            id=\"userPassword\"\n            name=\"password\"\n            required\n          />\n          <SubmitButton text={'Sign up'}></SubmitButton>\n        </Wrapper>\n      </Form>\n    </FormWrapper>\n  );\n};\n\nexport default Register;\n"],"names":["Form","styled","Wrapper","Label","children","Box","sx","display","paddingLeft","text","spinner","Button","disabled","variant","mt","justifySelf","alignSelf","bgcolor","grey","type","dispatch","useDispatch","useRegisterUserMutation","registerUser","error","useState","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","useEffect","alert","inputHandler","e","target","name","value","FormWrapper","onSubmit","preventDefault","email","password","then","data","setUser","catch","console","log","message","htmlFor","TextField","mb","label","onChange","id","required","SubmitButton"],"sourceRoot":""}